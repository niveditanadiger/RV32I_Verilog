00000000 <start>:
	0:		0002f293		andi x5 x5 0
	4:		00037313		andi x6 x6 0
	8:		0003f393		andi x7 x7 0
	c:		000e7e13		andi x28 x28 0
	10:		000efe93		andi x29 x29 0
	14:		000f7f13		andi x30 x30 0
	18:		000fff93		andi x31 x31 0
	1c:		ffff0f13		addi x30 x30 -1
	20:		00600313		addi x6 x0 6

00000024 <OUTER_FOR_LOOP>:
	24:		001f0f13		addi x30 x30 1
	28:		07e34a63		blt x6 x30 116 <END>
	2c:		10000297		auipc x5 0x10000
	30:		fd428293		addi x5 x5 -44
	34:		01e282b3		add x5 x5 x30
	38:		00028383		lb x7 0 x5
	3c:		000f0e13		addi x28 x30 0
	40:		001f0f93		addi x31 x30 1

00000044 <INNER_FOR_LOOP>:
	44:		03f34863		blt x6 x31 48 <SWAP>

00000048 <IF>:
	48:		10000297		auipc x5 0x10000
	4c:		fb828293		addi x5 x5 -72
	50:		01f282b3		add x5 x5 x31
	54:		00028e83		lb x29 0 x5
	58:		01d3ca63		blt x7 x29 20 <ELSE>
	5c:		000e8393		addi x7 x29 0
	60:		000f8e13		addi x28 x31 0
	64:		001f8f93		addi x31 x31 1
	68:		fddff06f		jal x0 -36 <INNER_FOR_LOOP>

0000006c <ELSE>:
	6c:		001f8f93		addi x31 x31 1
	70:		fd5ff06f		jal x0 -44 <INNER_FOR_LOOP>

00000074 <SWAP>:
	74:		fbee08e3		beq x28 x30 -80 <OUTER_FOR_LOOP>
	78:		10000297		auipc x5 0x10000
	7c:		f8828293		addi x5 x5 -120
	80:		01e282b3		add x5 x5 x30
	84:		00028e83		lb x29 0 x5
	88:		00728023		sb x7 0 x5
	8c:		41e282b3		sub x5 x5 x30
	90:		01c282b3		add x5 x5 x28
	94:		01d28023		sb x29 0 x5
	98:		f8dff06f		jal x0 -116 <OUTER_FOR_LOOP>

0000009c <END>:
	9c:		10000297		auipc x5 0x10000
	a0:		f6428293		addi x5 x5 -156



////////////////////////BINARY////////////////////////

00000000 <start>:
	0:		0002f293		00000000000000101111001010010011
	4:		00037313		00000000000000110111001100010011
	8:		0003f393		00000000000000111111001110010011
	c:		000e7e13		00000000000011100111111000010011
	10:		000efe93		00000000000011101111111010010011
	14:		000f7f13		00000000000011110111111100010011
	18:		000fff93		00000000000011111111111110010011
	1c:		ffff0f13		11111111111111110000111100010011
	20:		00600313		00000000011000000000001100010011

00000024 <OUTER_FOR_LOOP>:
	24:		001f0f13		00000000000111110000111100010011
	28:		07e34a63		00000111111000110100101001100011
	2c:		10000297		00010000000000000000001010010111
	30:		fd428293		11111101010000101000001010010011
	34:		01e282b3		00000001111000101000001010110011
	38:		00028383		00000000000000101000001110000011
	3c:		000f0e13		00000000000011110000111000010011
	40:		001f0f93		00000000000111110000111110010011

00000044 <INNER_FOR_LOOP>:
	44:		03f34863		00000011111100110100100001100011

00000048 <IF>:
	48:		10000297		00010000000000000000001010010111
	4c:		fb828293		11111011100000101000001010010011
	50:		01f282b3		00000001111100101000001010110011
	54:		00028e83		00000000000000101000111010000011
	58:		01d3ca63		00000001110100111100101001100011
	5c:		000e8393		00000000000011101000001110010011
	60:		000f8e13		00000000000011111000111000010011
	64:		001f8f93		00000000000111111000111110010011
	68:		fddff06f		11111101110111111111000001101111

0000006c <ELSE>:
	6c:		001f8f93		00000000000111111000111110010011
	70:		fd5ff06f		11111101010111111111000001101111

00000074 <SWAP>:
	74:		fbee08e3		11111011111011100000100011100011
	78:		10000297		00010000000000000000001010010111
	7c:		f8828293		11111000100000101000001010010011
	80:		01e282b3		00000001111000101000001010110011
	84:		00028e83		00000000000000101000111010000011
	88:		00728023		00000000011100101000000000100011
	8c:		41e282b3		01000001111000101000001010110011
	90:		01c282b3		00000001110000101000001010110011
	94:		01d28023		00000001110100101000000000100011
	98:		f8dff06f		11111000110111111111000001101111

0000009c <END>:
	9c:		10000297		00010000000000000000001010010111
	a0:		f6428293		11110110010000101000001010010011






///////////////////// Normal Assembly code [Before changes to selection_sort.v]///////////////////////

andi x5 x5 0
andi x6 x6 0
andi x7 x7 0
andi x28 x28 0
andi x29 x29 0
andi x30 x30 0
andi x31 x31 0
addi x30 x30 -4
addi x6 x0 400
<Outer_for_loop>:    addi x30 x30 4
    blt x6 x30 <end>
    auipc x5 0x00002
    addi x5 x5 -44 #change 
    add x5 x5 x30
    lw x7 0 x5
    addi x28 x30 0
    addi x31 x30 4
<inner_for_loop>:    blt x6 x31 <swap>
<if>:    auipc x5 0x00002
    addi x5 x5 -72 #change
    add x5 x5 x31
    lw x29 0 x5
    blt x7 x29 <else>
    addi x7 x29 0
    addi x28 x31 0
    addi x31 x31 4
    jal x0 <inner_for_loop>
<else>:    addi x31 x31 4
    jal x0 <inner_for_loop>
<swap>:    beq x28 x30 <Outer_for_loop>
    auipc x5 0x00002
    addi x5 x5 -120 #change
    add x5 x5 x30
    lw x29 0 x5
    sw x7 0 x5
    auipc x10 0x00002
    add x10 x10 x28
    sw x29 0 x10
    jal x0 <Outer_for_loop>
<end>:    auipc x5 0x00002
    addi x5 x5 -156 #change
    sw x5 256 x0



/////////////////////////// Normal Assembly code [After Changes] /////////////////////////////

andi x5 x5 0
addi x4 x5 100
lui x3 0x00002
<store_values>:    beq x4 x5 <data_initialization>
    sw x4 0 x3
    addi x3 x3 4
    addi x4 x4 -1
    jal x0 <store_values>
<data_initialization>: andi x6 x6 0
    andi x7 x7 0
    andi x28 x28 0
    andi x29 x29 0
    andi x30 x30 0
    andi x31 x31 0
    addi x30 x30 -4
    addi x6 x0 396
<Outer_for_loop>:    addi x30 x30 4
    blt x6 x30 <end>
    auipc x5 0x00002
    addi x5 x5 -72 #change 
    add x5 x5 x30
    lw x7 0 x5
    addi x28 x30 0
    addi x31 x30 4
<inner_for_loop>:    blt x6 x31 <swap>
<if>:    auipc x5 0x00002
    addi x5 x5 -100 #change
    add x5 x5 x31    
    lw x29 0 x5
    addi x0 x0 0
    blt x7 x29 <else>
    addi x7 x29 0
    addi x28 x31 0
    addi x31 x31 4
    jal x0 <inner_for_loop>
<else>:    addi x31 x31 4
    jal x0 <inner_for_loop>
<swap>:    beq x28 x30 <Outer_for_loop>
    auipc x5 0x00002
    addi x5 x5 -152 #change
    add x5 x5 x30
    lw x29 0 x5
    sw x7 0 x5
    lui x10 0x00002
    add x10 x10 x28
    sw x29 0 x10
    jal x0 <Outer_for_loop> #changes for custom
<end>:    auipc x5 0x00002
    addi x5 x5 -188 #change####
    sw x5 256 x0


///////////////Normal After changes Disassembled code/////////////////////////
	0:		0002f293		andi x5 x5 0
	4:		06428213		addi x4 x5 100
	8:		000021b7		lui x3 0x2

0000000c <<store_values>>:
	c:		00520a63		beq x4 x5 20 <<data_initialization>>
	10:		0041a023		sw x4 0 x3
	14:		00418193		addi x3 x3 4
	18:		fff20213		addi x4 x4 -1
	1c:		ff1ff06f		jal x0 -16 <<store_values>>

00000020 <<data_initialization>>:
	20:		00037313		andi x6 x6 0
	24:		0003f393		andi x7 x7 0
	28:		000e7e13		andi x28 x28 0
	2c:		000efe93		andi x29 x29 0
	30:		000f7f13		andi x30 x30 0
	34:		000fff93		andi x31 x31 0
	38:		ffcf0f13		addi x30 x30 -4
	3c:		18c00313		addi x6 x0 396

00000040 <<Outer_for_loop>>:
	40:		004f0f13		addi x30 x30 4
	44:		07e34c63		blt x6 x30 120 <<end>>
	48:		00002297		auipc x5 0x2
	4c:		fb828293		addi x5 x5 -72
	50:		01e282b3		add x5 x5 x30
	54:		0002a383		lw x7 0 x5
	58:		000f0e13		addi x28 x30 0
	5c:		004f0f93		addi x31 x30 4

00000060 <<inner_for_loop>>:
	60:		03f34a63		blt x6 x31 52 <<swap>>

00000064 <<if>>:
	64:		00002297		auipc x5 0x2
	68:		f9c28293		addi x5 x5 -100
	6c:		01f282b3		add x5 x5 x31
	70:		0002ae83		lw x29 0 x5
	74:		00000013		addi x0 x0 0
	78:		01d3ca63		blt x7 x29 20 <<else>>
	7c:		000e8393		addi x7 x29 0
	80:		000f8e13		addi x28 x31 0
	84:		004f8f93		addi x31 x31 4
	88:		fd9ff06f		jal x0 -40 <<inner_for_loop>>

0000008c <<else>>:
	8c:		004f8f93		addi x31 x31 4
	90:		fd1ff06f		jal x0 -48 <<inner_for_loop>>

00000094 <<swap>>:
	94:		fbee06e3		beq x28 x30 -84 <<Outer_for_loop>>
	98:		00002297		auipc x5 0x2
	9c:		f6828293		addi x5 x5 -152
	a0:		01e282b3		add x5 x5 x30
	a4:		0002ae83		lw x29 0 x5
	a8:		0072a023		sw x7 0 x5
	ac:		00002537		lui x10 0x2
	b0:		01c50533		add x10 x10 x28
	b4:		01d52023		sw x29 0 x10
	b8:		f89ff06f		jal x0 -120 <<Outer_for_loop>>

000000bc <<end>>:
	bc:		00002297		auipc x5 0x2
	c0:		f4428293		addi x5 x5 -188
	c4:		10502023		sw x5 256 x0



///////////////////////////////////////////////////////////////// BINARY CODE


	0:		0002f293		00000000000000101111001010010011
	4:		06428213		00000110010000101000001000010011
	8:		000021b7		00000000000000000010000110110111

0000000c <<store_values>>:
	c:		00520a63		00000000010100100000101001100011
	10:		0041a023		00000000010000011010000000100011
	14:		00418193		00000000010000011000000110010011
	18:		fff20213		11111111111100100000001000010011
	1c:		ff1ff06f		11111111000111111111000001101111

00000020 <<data_initialization>>:
	20:		00037313		00000000000000110111001100010011
	24:		0003f393		00000000000000111111001110010011
	28:		000e7e13		00000000000011100111111000010011
	2c:		000efe93		00000000000011101111111010010011
	30:		000f7f13		00000000000011110111111100010011
	34:		000fff93		00000000000011111111111110010011
	38:		ffcf0f13		11111111110011110000111100010011
	3c:		18c00313		00011000110000000000001100010011

00000040 <<Outer_for_loop>>:
	40:		004f0f13		00000000010011110000111100010011
	44:		07e34c63		00000111111000110100110001100011
	48:		00002297		00000000000000000010001010010111
	4c:		fb828293		11111011100000101000001010010011
	50:		01e282b3		00000001111000101000001010110011
	54:		0002a383		00000000000000101010001110000011
	58:		000f0e13		00000000000011110000111000010011
	5c:		004f0f93		00000000010011110000111110010011

00000060 <<inner_for_loop>>:
	60:		03f34a63		00000011111100110100101001100011

00000064 <<if>>:
	64:		00002297		00000000000000000010001010010111
	68:		f9c28293		11111001110000101000001010010011
	6c:		01f282b3		00000001111100101000001010110011
	70:		0002ae83		00000000000000101010111010000011
	74:		00000013		00000000000000000000000000010011
	78:		01d3ca63		00000001110100111100101001100011
	7c:		000e8393		00000000000011101000001110010011
	80:		000f8e13		00000000000011111000111000010011
	84:		004f8f93		00000000010011111000111110010011
	88:		fd9ff06f		11111101100111111111000001101111

0000008c <<else>>:
	8c:		004f8f93		00000000010011111000111110010011
	90:		fd1ff06f		11111101000111111111000001101111

00000094 <<swap>>:
	94:		fbee06e3		11111011111011100000011011100011
	98:		00002297		00000000000000000010001010010111
	9c:		f6828293		11110110100000101000001010010011
	a0:		01e282b3		00000001111000101000001010110011
	a4:		0002ae83		00000000000000101010111010000011
	a8:		0072a023		00000000011100101010000000100011
	ac:		00002537		00000000000000000010010100110111
	b0:		01c50533		00000001110001010000010100110011
	b4:		01d52023		00000001110101010010000000100011
	b8:		f89ff06f		11111000100111111111000001101111

000000bc <<end>>:
	bc:		00002297		00000000000000000010001010010111
	c0:		f4428293		11110100010000101000001010010011
	c4:		10502023		00010000010100000010000000100011



//////////////////////////CUSTOM INSTRUCTION ASSEMBLY CODE//////////////////// [CHANGE LINE 42 TO CUSTOM INSTRUCTION]
andi x5 x5 0
addi x4 x5 100
lui x3 0x00002
<store_values>:    beq x4 x5 <data_initialization>
    sw x4 0 x3
    addi x3 x3 4
    addi x4 x4 -1
    jal x0 <store_values>
<data_initialization>: andi x6 x6 0
    andi x7 x7 0
    andi x28 x28 0
    andi x29 x29 0
    andi x30 x30 0
    andi x31 x31 0
    addi x30 x30 -4
    addi x6 x0 396
<Outer_for_loop>:    addi x30 x30 4
    blt x6 x30 <end>
    auipc x5 0x00002
    addi x5 x5 -72 #change 
    add x5 x5 x30
    lw x7 0 x5
    addi x28 x30 0
    addi x31 x30 4
<inner_for_loop>:    blt x6 x31 <swap>
<if>:    auipc x5 0x00002
    addi x5 x5 -100 #change
    add x5 x5 x31    
    lw x29 0 x5
    addi x0 x0 0
    blt x7 x29 <else>
    addi x7 x29 0
    addi x28 x31 0
    addi x31 x31 4
    jal x0 <inner_for_loop>
<else>:    addi x31 x31 4
    jal x0 <inner_for_loop>
<swap>:    beq x28 x30 <Outer_for_loop>
    auipc x5 0x00002
    addi x5 x5 -152 #change
    add x5 x5 x30
    lw x29 0 x5
    lui x10 0x00002
    add x10 x10 x28
    sw x7 0 x10
    jal x0 <Outer_for_loop> #changes for custom
<end>:    auipc x5 0x00002
    addi x5 x5 -184 #change####
    sw x5 256 x0



	/////////////////////// DISASSEMBLED CODE CUSTOM //////////////////////////////////

		0:		0002f293		andi x5 x5 0
	4:		06428213		addi x4 x5 100
	8:		000021b7		lui x3 0x2

0000000c <<store_values>>:
	c:		00520a63		beq x4 x5 20 <<data_initialization>>
	10:		0041a023		sw x4 0 x3
	14:		00418193		addi x3 x3 4
	18:		fff20213		addi x4 x4 -1
	1c:		ff1ff06f		jal x0 -16 <<store_values>>

00000020 <<data_initialization>>:
	20:		00037313		andi x6 x6 0
	24:		0003f393		andi x7 x7 0
	28:		000e7e13		andi x28 x28 0
	2c:		000efe93		andi x29 x29 0
	30:		000f7f13		andi x30 x30 0
	34:		000fff93		andi x31 x31 0
	38:		ffcf0f13		addi x30 x30 -4
	3c:		18c00313		addi x6 x0 396

00000040 <<Outer_for_loop>>:
	40:		004f0f13		addi x30 x30 4
	44:		07e34a63		blt x6 x30 116 <<end>>
	48:		00002297		auipc x5 0x2
	4c:		fb828293		addi x5 x5 -72
	50:		01e282b3		add x5 x5 x30
	54:		0002a383		lw x7 0 x5
	58:		000f0e13		addi x28 x30 0
	5c:		004f0f93		addi x31 x30 4

00000060 <<inner_for_loop>>:
	60:		03f34a63		blt x6 x31 52 <<swap>>

00000064 <<if>>:
	64:		00002297		auipc x5 0x2
	68:		f9c28293		addi x5 x5 -100
	6c:		01f282b3		add x5 x5 x31
	70:		0002ae83		lw x29 0 x5
	74:		00000013		addi x0 x0 0
	78:		01d3ca63		blt x7 x29 20 <<else>>
	7c:		000e8393		addi x7 x29 0
	80:		000f8e13		addi x28 x31 0
	84:		004f8f93		addi x31 x31 4
	88:		fd9ff06f		jal x0 -40 <<inner_for_loop>>

0000008c <<else>>:
	8c:		004f8f93		addi x31 x31 4
	90:		fd1ff06f		jal x0 -48 <<inner_for_loop>>

00000094 <<swap>>:
	94:		fbee06e3		beq x28 x30 -84 <<Outer_for_loop>>
	98:		00002297		auipc x5 0x2
	9c:		f6828293		addi x5 x5 -152
	a0:		01e282b3		add x5 x5 x30
	a4:		0002ae83		lw x29 0 x5
	a8:		00002537		lui x10 0x2
	ac:		01c50533		add x10 x10 x28
	b0:		00752023		sw x7 0 x10
	b4:		f8dff06f		jal x0 -116 <<Outer_for_loop>>

000000b8 <<end>>:
	b8:		00002297		auipc x5 0x2
	bc:		f4828293		addi x5 x5 -184
	c0:		10502023		sw x5 256 x0



////////////////////// BINARY CODE CUSTOM ///////////////////////////////
	0:		0002f293		00000000000000101111001010010011
	4:		06428213		00000110010000101000001000010011
	8:		000021b7		00000000000000000010000110110111

0000000c <<store_values>>:
	c:		00520a63		00000000010100100000101001100011
	10:		0041a023		00000000010000011010000000100011
	14:		00418193		00000000010000011000000110010011
	18:		fff20213		11111111111100100000001000010011
	1c:		ff1ff06f		11111111000111111111000001101111

00000020 <<data_initialization>>:
	20:		00037313		00000000000000110111001100010011
	24:		0003f393		00000000000000111111001110010011
	28:		000e7e13		00000000000011100111111000010011
	2c:		000efe93		00000000000011101111111010010011
	30:		000f7f13		00000000000011110111111100010011
	34:		000fff93		00000000000011111111111110010011
	38:		ffcf0f13		11111111110011110000111100010011
	3c:		18c00313		00011000110000000000001100010011

00000040 <<Outer_for_loop>>:
	40:		004f0f13		00000000010011110000111100010011
	44:		07e34a63		00000111111000110100101001100011
	48:		00002297		00000000000000000010001010010111
	4c:		fb828293		11111011100000101000001010010011
	50:		01e282b3		00000001111000101000001010110011
	54:		0002a383		00000000000000101010001110000011
	58:		000f0e13		00000000000011110000111000010011
	5c:		004f0f93		00000000010011110000111110010011

00000060 <<inner_for_loop>>:
	60:		03f34a63		00000011111100110100101001100011

00000064 <<if>>:
	64:		00002297		00000000000000000010001010010111
	68:		f9c28293		11111001110000101000001010010011
	6c:		01f282b3		00000001111100101000001010110011
	70:		0002ae83		00000000000000101010111010000011
	74:		00000013		00000000000000000000000000010011
	78:		01d3ca63		00000001110100111100101001100011
	7c:		000e8393		00000000000011101000001110010011
	80:		000f8e13		00000000000011111000111000010011
	84:		004f8f93		00000000010011111000111110010011
	88:		fd9ff06f		11111101100111111111000001101111

0000008c <<else>>:
	8c:		004f8f93		00000000010011111000111110010011
	90:		fd1ff06f		11111101000111111111000001101111

00000094 <<swap>>:
	94:		fbee06e3		11111011111011100000011011100011
	98:		00002297		00000000000000000010001010010111
	9c:		f6828293		11110110100000101000001010010011
	a0:		01e282b3		00000001111000101000001010110011
	a4:		0002ae83		00000000000000101010111010000011
	a8:		00002537		00000000000000000010010100110111
	ac:		01c50533		00000001110001010000010100110011
	b0:		00752023		00000000011101010010000000100011
	b4:		f8dff06f		11111000110111111111000001101111

000000b8 <<end>>:
	b8:		00002297		00000000000000000010001010010111
	bc:		f4828293		11110100100000101000001010010011
	c0:		10502023		00010000010100000010000000100011



/////////////////////////////////////////////////////////////////////////////////
NORMAL 4


andi x5 x5 0
addi x4 x5 100
addi x3 x0 200
<store_values>:    beq x4 x5 <data_initialization>
    sw x4 0 x3
    addi x3 x3 4
    addi x4 x4 -1
    jal x0 <store_values>
<data_initialization>: andi x6 x6 0
    andi x7 x7 0
    andi x28 x28 0
    andi x29 x29 0
    andi x30 x30 0
    andi x31 x31 0
    addi x30 x30 -4
    addi x6 x0 396
<Outer_for_loop>:    addi x30 x30 4
    blt x6 x30 <end>
    addi x5 x0 200 
    add x5 x5 x30
    lw x7 0 x5
    addi x28 x30 0
    addi x31 x30 4
<inner_for_loop>:    blt x6 x31 <swap>
<if>:    addi x5 x0 200
    add x5 x5 x31    
    lw x29 0 x5
    addi x0 x0 0
    blt x7 x29 <else>
    addi x7 x29 0
    addi x28 x31 0
    addi x31 x31 4
    jal x0 <inner_for_loop>
<else>:    addi x31 x31 4
    jal x0 <inner_for_loop>
<swap>:    beq x28 x30 <Outer_for_loop>
    addi x5 x0 200
    add x5 x5 x30
    lw x29 0 x5
    sw x7 0 x5
    addi x10 x0 200
    add x10 x10 x28
    sw x29 0 x10
    jal x0 <Outer_for_loop> #changes for custom
<end>:    addi x5 x0 200
    sw x5 900 x0


	//////////////////////////////////////////////
		0:		0002f293		andi x5 x5 0
	4:		06428213		addi x4 x5 100
	8:		0c800193		addi x3 x0 200

0000000c <<store_values>>:
	c:		00520a63		beq x4 x5 20 <<data_initialization>>
	10:		0041a023		sw x4 0 x3
	14:		00418193		addi x3 x3 4
	18:		fff20213		addi x4 x4 -1
	1c:		ff1ff06f		jal x0 -16 <<store_values>>

00000020 <<data_initialization>>:
	20:		00037313		andi x6 x6 0
	24:		0003f393		andi x7 x7 0
	28:		000e7e13		andi x28 x28 0
	2c:		000efe93		andi x29 x29 0
	30:		000f7f13		andi x30 x30 0
	34:		000fff93		andi x31 x31 0
	38:		ffcf0f13		addi x30 x30 -4
	3c:		18c00313		addi x6 x0 396

00000040 <<Outer_for_loop>>:
	40:		004f0f13		addi x30 x30 4
	44:		07e34663		blt x6 x30 108 <<end>>
	48:		0c800293		addi x5 x0 200
	4c:		01e282b3		add x5 x5 x30
	50:		0002a383		lw x7 0 x5
	54:		000f0e13		addi x28 x30 0
	58:		004f0f93		addi x31 x30 4

0000005c <<inner_for_loop>>:
	5c:		03f34863		blt x6 x31 48 <<swap>>

00000060 <<if>>:
	60:		0c800293		addi x5 x0 200
	64:		01f282b3		add x5 x5 x31
	68:		0002ae83		lw x29 0 x5
	6c:		00000013		addi x0 x0 0
	70:		01d3ca63		blt x7 x29 20 <<else>>
	74:		000e8393		addi x7 x29 0
	78:		000f8e13		addi x28 x31 0
	7c:		004f8f93		addi x31 x31 4
	80:		fddff06f		jal x0 -36 <<inner_for_loop>>

00000084 <<else>>:
	84:		004f8f93		addi x31 x31 4
	88:		fd5ff06f		jal x0 -44 <<inner_for_loop>>

0000008c <<swap>>:
	8c:		fbee0ae3		beq x28 x30 -76 <<Outer_for_loop>>
	90:		0c800293		addi x5 x0 200
	94:		01e282b3		add x5 x5 x30
	98:		0002ae83		lw x29 0 x5
	9c:		0072a023		sw x7 0 x5
	a0:		0c800513		addi x10 x0 200
	a4:		01c50533		add x10 x10 x28
	a8:		01d52023		sw x29 0 x10
	ac:		f95ff06f		jal x0 -108 <<Outer_for_loop>>

000000b0 <<end>>:
	b0:		0c800293		addi x5 x0 200
	b4:		38502223		sw x5 900 x0


///////////////////////////////////////////////////
	0:		0002f293		00000000000000101111001010010011
	4:		06428213		00000110010000101000001000010011
	8:		0c800193		00001100100000000000000110010011

0000000c <<store_values>>:
	c:		00520a63		00000000010100100000101001100011
	10:		0041a023		00000000010000011010000000100011
	14:		00418193		00000000010000011000000110010011
	18:		fff20213		11111111111100100000001000010011
	1c:		ff1ff06f		11111111000111111111000001101111

00000020 <<data_initialization>>:
	20:		00037313		00000000000000110111001100010011
	24:		0003f393		00000000000000111111001110010011
	28:		000e7e13		00000000000011100111111000010011
	2c:		000efe93		00000000000011101111111010010011
	30:		000f7f13		00000000000011110111111100010011
	34:		000fff93		00000000000011111111111110010011
	38:		ffcf0f13		11111111110011110000111100010011
	3c:		18c00313		00011000110000000000001100010011

00000040 <<Outer_for_loop>>:
	40:		004f0f13		00000000010011110000111100010011
	44:		07e34663		00000111111000110100011001100011
	48:		0c800293		00001100100000000000001010010011
	4c:		01e282b3		00000001111000101000001010110011
	50:		0002a383		00000000000000101010001110000011
	54:		000f0e13		00000000000011110000111000010011
	58:		004f0f93		00000000010011110000111110010011

0000005c <<inner_for_loop>>:
	5c:		03f34863		00000011111100110100100001100011

00000060 <<if>>:
	60:		0c800293		00001100100000000000001010010011
	64:		01f282b3		00000001111100101000001010110011
	68:		0002ae83		00000000000000101010111010000011
	6c:		00000013		00000000000000000000000000010011
	70:		01d3ca63		00000001110100111100101001100011
	74:		000e8393		00000000000011101000001110010011
	78:		000f8e13		00000000000011111000111000010011
	7c:		004f8f93		00000000010011111000111110010011
	80:		fddff06f		11111101110111111111000001101111

00000084 <<else>>:
	84:		004f8f93		00000000010011111000111110010011
	88:		fd5ff06f		11111101010111111111000001101111

0000008c <<swap>>:
	8c:		fbee0ae3		11111011111011100000101011100011
	90:		0c800293		00001100100000000000001010010011
	94:		01e282b3		00000001111000101000001010110011
	98:		0002ae83		00000000000000101010111010000011
	9c:		0072a023		00000000011100101010000000100011
	a0:		0c800513		00001100100000000000010100010011
	a4:		01c50533		00000001110001010000010100110011
	a8:		01d52023		00000001110101010010000000100011
	ac:		f95ff06f		11111001010111111111000001101111

000000b0 <<end>>:
	b0:		0c800293		00001100100000000000001010010011
	b4:		38502223		00111000010100000010001000100011
