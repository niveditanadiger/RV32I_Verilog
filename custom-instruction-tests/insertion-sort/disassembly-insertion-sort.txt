/////////////////////////////////// C code for insertion sort {NORMAL} /////////////////////
void insertion_sort(int arr[], int n)
{
	int i, j, key;
	for (i=1;i<n;i++)
	{
		key=arr[i];
		j=i-1;
		while(j>=0 && arr[j]>key)
		{
			arr[j+1]=arr[j];
			j--;
		}
		arr[j+1]=key
	}
}

///////////// TO TRACE ///////////////
x5 --> arr address
x6 --> n=396 here
x7 --> i
x28 --> key=arr[i]
x29 --> j
x30 --> arr[j]
x31 --> arr[j+1]

/////////////////////////////////////NORMAL///////////////////////////////////////////



andi x5 x5 0
addi x4 x5 100
addi x3 x0 200
<store_values>:    beq x4 x5 <data_initialization>
    sw x4 0 x3
    addi x3 x3 4
    addi x4 x4 -1
    jal x0 <store_values>
<data_initialization>:    addi x7 x0 4
    andi x28 x28 0
    andi x29 x29 0
    andi x30 x30 0
    andi x31 x31 0
    addi x5 x0 200
    addi x6 x0 396
<for_loop>:    bgt x7 x6 <end>
    addi x5 x0 200
    add x5 x5 x7
    lw x28 0 x5
    addi x29 x7 -4
<while>:    addi x5 x0 200
    add x5 x5 x29
    lw x30 0 x5
    blt x29 x0 <end_while>
    blt x30 x28 <end_while>
    sw x30 4 x5
    addi x29 x29 -4
    j <while>
<end_while>:    addi x5 x0 200
    add x5 x5 x29
    sw x28 4 x5
    addi x7 x7 4
    j <for_loop>
<end>:    sw x5 900 x0


	0:		0002f293		andi x5 x5 0
	4:		06428213		addi x4 x5 100
	8:		0c800193		addi x3 x0 200

0000000c <<store_values>>:
	c:		00520a63		beq x4 x5 20 <<data_initialization>>
	10:		0041a023		sw x4 0 x3
	14:		00418193		addi x3 x3 4
	18:		fff20213		addi x4 x4 -1
	1c:		ff1ff06f		jal x0 -16 <<store_values>>

00000020 <<data_initialization>>:
	20:		00400393		addi x7 x0 4
	24:		000e7e13		andi x28 x28 0
	28:		000efe93		andi x29 x29 0
	2c:		000f7f13		andi x30 x30 0
	30:		000fff93		andi x31 x31 0
	34:		0c800293		addi x5 x0 200
	38:		18c00313		addi x6 x0 396

0000003c <<for_loop>>:
	3c:		04734463		blt x6 x7 72 <<end>>
	40:		0c800293		addi x5 x0 200
	44:		007282b3		add x5 x5 x7
	48:		0002ae03		lw x28 0 x5
	4c:		ffc38e93		addi x29 x7 -4

00000050 <<while>>:
	50:		0c800293		addi x5 x0 200
	54:		01d282b3		add x5 x5 x29
	58:		0002af03		lw x30 0 x5
	5c:		000eca63		blt x29 x0 20 <<end_while>>
	60:		01cf4863		blt x30 x28 16 <<end_while>>
	64:		01e2a223		sw x30 4 x5
	68:		ffce8e93		addi x29 x29 -4
	6c:		fe5ff06f		jal x0 -28 <<while>>

00000070 <<end_while>>:
	70:		0c800293		addi x5 x0 200
	74:		01d282b3		add x5 x5 x29
	78:		01c2a223		sw x28 4 x5
	7c:		00438393		addi x7 x7 4
	80:		fbdff06f		jal x0 -68 <<for_loop>>

00000084 <<end>>:
	84:		38502223		sw x5 900 x0



	0:		0002f293		00000000000000101111001010010011
	4:		06428213		00000110010000101000001000010011
	8:		0c800193		00001100100000000000000110010011

0000000c <<store_values>>:
	c:		00520a63		00000000010100100000101001100011
	10:		0041a023		00000000010000011010000000100011
	14:		00418193		00000000010000011000000110010011
	18:		fff20213		11111111111100100000001000010011
	1c:		ff1ff06f		11111111000111111111000001101111

00000020 <<data_initialization>>:
	20:		00400393		00000000010000000000001110010011
	24:		000e7e13		00000000000011100111111000010011
	28:		000efe93		00000000000011101111111010010011
	2c:		000f7f13		00000000000011110111111100010011
	30:		000fff93		00000000000011111111111110010011
	34:		0c800293		00001100100000000000001010010011
	38:		18c00313		00011000110000000000001100010011

0000003c <<for_loop>>:
	3c:		04734463		00000100011100110100010001100011
	40:		0c800293		00001100100000000000001010010011
	44:		007282b3		00000000011100101000001010110011
	48:		0002ae03		00000000000000101010111000000011
	4c:		ffc38e93		11111111110000111000111010010011

00000050 <<while>>:
	50:		0c800293		00001100100000000000001010010011
	54:		01d282b3		00000001110100101000001010110011
	58:		0002af03		00000000000000101010111100000011
	5c:		000eca63		00000000000011101100101001100011
	60:		01cf4863		00000001110011110100100001100011
	64:		01e2a223		00000001111000101010001000100011
	68:		ffce8e93		11111111110011101000111010010011
	6c:		fe5ff06f		11111110010111111111000001101111

00000070 <<end_while>>:
	70:		0c800293		00001100100000000000001010010011
	74:		01d282b3		00000001110100101000001010110011
	78:		01c2a223		00000001110000101010001000100011
	7c:		00438393		00000000010000111000001110010011
	80:		fbdff06f		11111011110111111111000001101111

00000084 <<end>>:
	84:		38502223		00111000010100000010001000100011




////////////////////////////// C code with swaps //////////////////////////////////

void insertion_sort(int arr[], int n)
{
	int i, j, key;
	for (i=1;i<n;i++)
	{
		j=i;
		while(j>0 && arr[j]>arr[j-1])
		{
			swap(arr[j],arr[j-1])
			j--;
		}
	}
}


///////////// TO TRACE //////////////

x5 --> arr address
x6 --> n=396 here
x7 --> i
x28 --> jal
x29 --> arr[j]
x30 --> arr[j-1]
x31 --> j-1

/////////////////////////////////Assembly code with swaps ///////////////////////////

andi x5 x5 0
addi x4 x5 100
addi x3 x0 200
<store_values>:    beq x4 x5 <data_initialization>
    sw x4 0 x3
    addi x3 x3 4
    addi x4 x4 -1
    jal x0 <store_values>
<data_initialization>:    addi x5 x0 200
    addi x6 x0 396
    addi x7 x0 4
    andi x28 x28 0
    andi x29 x29 0
    andi x30 x30 0
<for_loop>:    bgt x7 x6 <end>
    add x28 x7 x0
<while>:    bgt x0 x28 <end_while>
    addi x5 x0 200
    add x5 x28 x5
    lw x29 0 x5
    addi x31 x28 -4
    addi x5 x0 200
    add x5 x5 x31
    lw x30 0 x5
    addi x0 x0 0
    blt x29 x30 <swap>
<end_while>:    addi x7 x7 4
    j <for_loop>
<swap>:    lw x30 0 x5
    addi x5 x0 200
    add x5 x5 x28
    lw x29 0 x5
    sw x30 0 x5
    addi x5 x0 200
    add x5 x5 x31
    sw x29 0 x5
    addi x28 x28 -4
    j <while>
<end>:    sw x5 900 x0



	0:		0002f293		andi x5 x5 0
	4:		06428213		addi x4 x5 100
	8:		0c800193		addi x3 x0 200

0000000c <<store_values>>:
	c:		00520a63		beq x4 x5 20 <<data_initialization>>
	10:		0041a023		sw x4 0 x3
	14:		00418193		addi x3 x3 4
	18:		fff20213		addi x4 x4 -1
	1c:		ff1ff06f		jal x0 -16 <<store_values>>

00000020 <<data_initialization>>:
	20:		0c800293		addi x5 x0 200
	24:		18c00313		addi x6 x0 396
	28:		00400393		addi x7 x0 4
	2c:		000e7e13		andi x28 x28 0
	30:		000efe93		andi x29 x29 0
	34:		000f7f13		andi x30 x30 0

00000038 <<for_loop>>:
	38:		06734063		blt x6 x7 96 <<end>>
	3c:		00038e33		add x28 x7 x0

00000040 <<while>>:
	40:		020e4463		blt x28 x0 40 <<end_while>>
	44:		0c800293		addi x5 x0 200
	48:		005e02b3		add x5 x28 x5
	4c:		0002ae83		lw x29 0 x5
	50:		ffce0f93		addi x31 x28 -4
	54:		0c800293		addi x5 x0 200
	58:		01f282b3		add x5 x5 x31
	5c:		0002af03		lw x30 0 x5
	60:		00000013		addi x0 x0 0
	64:		01eec663		blt x29 x30 12 <<swap>>

00000068 <<end_while>>:
	68:		00438393		addi x7 x7 4
	6c:		fcdff06f		jal x0 -52 <<for_loop>>

00000070 <<swap>>:
	70:		0002af03		lw x30 0 x5
	74:		0c800293		addi x5 x0 200
	78:		01c282b3		add x5 x5 x28
	7c:		0002ae83		lw x29 0 x5
	80:		01e2a023		sw x30 0 x5
	84:		0c800293		addi x5 x0 200
	88:		01f282b3		add x5 x5 x31
	8c:		01d2a023		sw x29 0 x5
	90:		ffce0e13		addi x28 x28 -4
	94:		fadff06f		jal x0 -84 <<while>>

00000098 <<end>>:
	98:		38502223		sw x5 900 x0



	0:		0002f293		00000000000000101111001010010011
	4:		06428213		00000110010000101000001000010011
	8:		0c800193		00001100100000000000000110010011

0000000c <<store_values>>:
	c:		00520a63		00000000010100100000101001100011
	10:		0041a023		00000000010000011010000000100011
	14:		00418193		00000000010000011000000110010011
	18:		fff20213		11111111111100100000001000010011
	1c:		ff1ff06f		11111111000111111111000001101111

00000020 <<data_initialization>>:
	20:		0c800293		00001100100000000000001010010011
	24:		18c00313		00011000110000000000001100010011
	28:		00400393		00000000010000000000001110010011
	2c:		000e7e13		00000000000011100111111000010011
	30:		000efe93		00000000000011101111111010010011
	34:		000f7f13		00000000000011110111111100010011

00000038 <<for_loop>>:
	38:		06734063		00000110011100110100000001100011
	3c:		00038e33		00000000000000111000111000110011

00000040 <<while>>:
	40:		020e4463		00000010000011100100010001100011
	44:		0c800293		00001100100000000000001010010011
	48:		005e02b3		00000000010111100000001010110011
	4c:		0002ae83		00000000000000101010111010000011
	50:		ffce0f93		11111111110011100000111110010011
	54:		0c800293		00001100100000000000001010010011
	58:		01f282b3		00000001111100101000001010110011
	5c:		0002af03		00000000000000101010111100000011
	60:		00000013		00000000000000000000000000010011
	64:		01eec663		00000001111011101100011001100011

00000068 <<end_while>>:
	68:		00438393		00000000010000111000001110010011
	6c:		fcdff06f		11111100110111111111000001101111

00000070 <<swap>>:
	70:		0002af03		00000000000000101010111100000011
	74:		0c800293		00001100100000000000001010010011
	78:		01c282b3		00000001110000101000001010110011
	7c:		0002ae83		00000000000000101010111010000011
	80:		01e2a023		00000001111000101010000000100011
	84:		0c800293		00001100100000000000001010010011
	88:		01f282b3		00000001111100101000001010110011
	8c:		01d2a023		00000001110100101010000000100011
	90:		ffce0e13		11111111110011100000111000010011
	94:		fadff06f		11111010110111111111000001101111

00000098 <<end>>:
	98:		38502223		00111000010100000010001000100011




////////////////////////////// CUSTOM INSTRUCTION /////////////////////

andi x5 x5 0
addi x4 x5 100
addi x3 x0 200
<store_values>:    beq x4 x5 <data_initialization>
    sw x4 0 x3
    addi x3 x3 4
    addi x4 x4 -1
    jal x0 <store_values>
<data_initialization>:    addi x5 x0 200
    addi x6 x0 396
    addi x7 x0 4
    andi x28 x28 0
    andi x29 x29 0
    andi x30 x30 0
<for_loop>:    bgt x7 x6 <end>
    add x28 x7 x0
<while>:    bgt x0 x28 <end_while>
    addi x5 x0 200
    add x5 x28 x5
    lw x29 0 x5
    addi x31 x28 -4
    addi x5 x0 200
    add x5 x5 x31
    lw x30 0 x5
    addi x0 x0 0
    blt x29 x30 <swap>
<end_while>:    addi x7 x7 4
    j <for_loop>
<swap>:    lw x30 0 x5
    addi x5 x0 200
    add x5 x5 x28
    mrswp x30 0 x5 ////////////////custom
    #sw x30 0 x5
    addi x5 x0 200
    add x5 x5 x31
    addi x28 x28 -4
    sw x30 0 x5
    j <while>
<end>:    sw x5 900 x0



	0:		0002f293		andi x5 x5 0
	4:		06428213		addi x4 x5 100
	8:		0c800193		addi x3 x0 200

0000000c <<store_values>>:
	c:		00520a63		beq x4 x5 20 <<data_initialization>>
	10:		0041a023		sw x4 0 x3
	14:		00418193		addi x3 x3 4
	18:		fff20213		addi x4 x4 -1
	1c:		ff1ff06f		jal x0 -16 <<store_values>>

00000020 <<data_initialization>>:
	20:		0c800293		addi x5 x0 200
	24:		18c00313		addi x6 x0 396
	28:		00400393		addi x7 x0 4
	2c:		000e7e13		andi x28 x28 0
	30:		000efe93		andi x29 x29 0
	34:		000f7f13		andi x30 x30 0

00000038 <<for_loop>>:
	38:		04734e63		blt x6 x7 92 <<end>>
	3c:		00038e33		add x28 x7 x0

00000040 <<while>>:
	40:		020e4463		blt x28 x0 40 <<end_while>>
	44:		0c800293		addi x5 x0 200
	48:		005e02b3		add x5 x28 x5
	4c:		0002ae83		lw x29 0 x5
	50:		ffce0f93		addi x31 x28 -4
	54:		0c800293		addi x5 x0 200
	58:		01f282b3		add x5 x5 x31
	5c:		0002af03		lw x30 0 x5
	60:		00000013		addi x0 x0 0
	64:		01eec663		blt x29 x30 12 <<swap>>

00000068 <<end_while>>:
	68:		00438393		addi x7 x7 4
	6c:		fcdff06f		jal x0 -52 <<for_loop>>

00000070 <<swap>>:
	70:		0002af03		lw x30 0 x5
	74:		0c800293		addi x5 x0 200
	78:		01c282b3		add x5 x5 x28
	7c:		0002ae83		lw x29 0 x5			///////////////custommmmmmmmmm
	80:		0c800293		addi x5 x0 200
	84:		01f282b3		add x5 x5 x31
	88:		ffce0e13		addi x28 x28 -4
	8c:		01e2a023		sw x30 0 x5
	90:		fb1ff06f		jal x0 -80 <<while>>

00000094 <<end>>:
	94:		38502223		sw x5 900 x0


		0:		0002f293		00000000000000101111001010010011
	4:		06428213		00000110010000101000001000010011
	8:		0c800193		00001100100000000000000110010011

0000000c <<store_values>>:
	c:		00520a63		00000000010100100000101001100011
	10:		0041a023		00000000010000011010000000100011
	14:		00418193		00000000010000011000000110010011
	18:		fff20213		11111111111100100000001000010011
	1c:		ff1ff06f		11111111000111111111000001101111

00000020 <<data_initialization>>:
	20:		0c800293		00001100100000000000001010010011
	24:		18c00313		00011000110000000000001100010011
	28:		00400393		00000000010000000000001110010011
	2c:		000e7e13		00000000000011100111111000010011
	30:		000efe93		00000000000011101111111010010011
	34:		000f7f13		00000000000011110111111100010011

00000038 <<for_loop>>:
	38:		04734e63		00000100011100110100111001100011
	3c:		00038e33		00000000000000111000111000110011

00000040 <<while>>:
	40:		020e4463		00000010000011100100010001100011
	44:		0c800293		00001100100000000000001010010011
	48:		005e02b3		00000000010111100000001010110011
	4c:		0002ae83		00000000000000101010111010000011
	50:		ffce0f93		11111111110011100000111110010011
	54:		0c800293		00001100100000000000001010010011
	58:		01f282b3		00000001111100101000001010110011
	5c:		0002af03		00000000000000101010111100000011
	60:		00000013		00000000000000000000000000010011
	64:		01eec663		00000001111011101100011001100011

00000068 <<end_while>>:
	68:		00438393		00000000010000111000001110010011
	6c:		fcdff06f		11111100110111111111000001101111

00000070 <<swap>>:
	70:		0002af03		00000000000000101010111100000011
	74:		0c800293		00001100100000000000001010010011
	78:		01c282b3		00000001110000101000001010110011
	7c:		0002ae83		00000000000000101010111010000011			/////////custommmmmmmmmmm---->00000001111000101010000000001011
	80:		0c800293		00001100100000000000001010010011
	84:		01f282b3		00000001111100101000001010110011
	88:		ffce0e13		11111111110011100000111000010011
	8c:		01e2a023		00000001111000101010000000100011
	90:		fb1ff06f		11111011000111111111000001101111

00000094 <<end>>:
	94:		38502223		00111000010100000010001000100011

